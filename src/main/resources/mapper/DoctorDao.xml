<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hospital.api.db.dao.DoctorDao">
    <update id="updatePhoto">
        UPSERT INTO HOSPITAL.DOCTOR("id","photo")
        VALUES (${id},#{photo})
    </update>
    <update id="deleteByIds">
        UPSERT INTO HOSPITAL.DOCTOR("id","status")
        SELECT "id",4
        from HOSPITAL.DOCTOR
        WHERE "id" in
        <foreach collection="array" open="(" item="item" separator="," close=")">
            ${item}
        </foreach>
    </update>
    <select id="searchByPage" parameterType="Map" resultType="HashMap">
        SELECT d."id" AS "id",
        d."name" AS "name",
        d."sex" AS "sex",
        d."tel" AS "tel",
        d."school" AS "school",
        d."degree" AS "degree",
        d."job" AS "job",
        md."name" AS "deptName",
        ds."name" AS "subName",
        d."recommended" AS "recommended",
        d."status" AS "status"
        FROM HOSPITAL.DOCTOR d
        JOIN HOSPITAL.MEDICAL_DEPT_SUB_AND_DOCTOR sd ON sd."doctor_id" = d."id"
        JOIN HOSPITAL.MEDICAL_DEPT_SUB ds ON sd."dept_sub_id" = ds."id"
        JOIN HOSPITAL.MEDICAL_DEPT md ON ds."dept_id" = md."id"
        WHERE 1=1
        <if test="name!=null">
            AND d."name" LIKE '%${name}%'
        </if>
        <if test="deptId!=null">
            AND md."id" = ${deptId}
        </if>
        <if test="degree!=null">
            AND d."degree" = #{degree}
        </if>
        <if test="job!=null">
            AND d."job" = #{job}
        </if>
        <if test="recommended!=null">
            AND d."recommended" = ${recommended}
        </if>
        AND d."status" = ${status}
        <if test="order!=null">
            ORDER BY md."id" ${order}
        </if>
        LIMIT ${length} OFFSET #{start}
    </select>

    <select id="searchCount" parameterType="Map" resultType="long">
        SELECT COUNT(*)
        FROM HOSPITAL.DOCTOR d
        JOIN HOSPITAL.MEDICAL_DEPT_SUB_AND_DOCTOR sd ON sd."doctor_id" = d."id"
        JOIN HOSPITAL.MEDICAL_DEPT_SUB ds ON sd."dept_sub_id" = ds."id"
        JOIN HOSPITAL.MEDICAL_DEPT md ON ds."dept_id" = md."id"
        WHERE 1=1
        <if test="name!=null">
            AND d."name" LIKE '%${name}%'
        </if>
        <if test="deptId!=null">
            AND md."id" = ${deptId}
        </if>
        <if test="degree!=null">
            AND d."degree" = #{degree}
        </if>
        <if test="job!=null">
            AND d."job" = #{job}
        </if>
        <if test="recommended!=null">
            AND d."recommended" = ${recommended}
        </if>
        AND d."status" = ${status}
    </select>

    <select id="searchContent" parameterType="int" resultType="HashMap">
        SELECT "photo",
               "pid",
               "birthday",
               "uuid",
               "hiredate",
               "email",
               "remark",
               "tag",
               "address",
               "description"
        FROM HOSPITAL.DOCTOR
        WHERE "id" = ${id}
    </select>
    <insert id="insert" parameterType="com.example.hospital.api.db.pojo.DoctorEntity">
        UPSERT INTO HOSPITAL.DOCTOR(
        "id", "name", "pid", "uuid", "sex", "birthday",
        "school", "degree", "tel", "address", "email", "job", "remark",
        "description", "hiredate", "tag","recommended","status", "create_time"
    )
    VALUES (
        NEXT VALUE FOR HOSPITAL.DOCTOR_SEQUENCE, #{name}, #{pid}, #{uuid}, #{sex}, TO_DATE('${birthday}'),
        #{school}, #{degree}, #{tel}, #{address}, #{email}, #{job}, #{remark},
        #{description}, #{hiredate}, #{tag}, ${recommended}, ${status}, NOW()
        )
    </insert>

    <select id="searchIdByUuid" parameterType="String" resultType="Integer">
        SELECT "id"
        FROM HOSPITAL.DOCTOR
        WHERE "uuid" = #{uuid}
    </select>
    <select id="searchById" resultType="java.util.Map" parameterType="int">
        SELECT d."id" AS "id",
               d."name" AS "name",
               d."pid" AS "pid",
               d."uuid" AS"uuid",
               d."sex" AS "sex",
               d."birthday" AS "birthday",
               d."school" AS "school",
               d."degree" AS "degree",
               d."tel" AS "tel",
               d."address" AS "address",
               d."email" AS "email",
               d."job" AS "job",
               d."remark" AS "remark",
               d."description" AS "description",
               d."hiredate" AS "hiredate",
               d."tag" AS "tag",
               d."recommended" AS "recommended",
               d."status" AS "status",
               md."name" AS "deptName",
               sd."dept_sub_id" AS "deptSubId"
        FROM HOSPITAL.DOCTOR d
                 JOIN HOSPITAL.MEDICAL_DEPT_SUB_AND_DOCTOR sd ON sd."doctor_id" = d."id"
                 JOIN HOSPITAL.MEDICAL_DEPT_SUB s ON sd."dept_sub_id" = s."id"
                 JOIN HOSPITAL.MEDICAL_DEPT md ON s."dept_id" = md."id"
        WHERE d."id" = ${id}
    </select>
    <select id="searchByDeptSubId" resultType="java.util.Map">
        SELECT d."id" AS "id",
               d."name" AS "name"
               FROM HOSPITAL.DOCTOR d
        INNER JOIN HOSPITAL.MEDICAL_DEPT_SUB_AND_DOCTOR sd ON sd."doctor_id" = d."id"
        WHERE sd."dept_sub_id" = ${deptSubId}
        AND d."status" = 1
    </select>

    <update id="update" parameterType="Map">
        UPSERT INTO HOSPITAL.DOCTOR(
        "id", "name", "pid", "sex", "birthday",
        "school", "degree", "tel", "address", "email", "job", "remark",
        "description", "hiredate", "tag","recommended","status"
    )
    VALUES (
        ${id}, #{name}, #{pid}, #{sex}, TO_DATE('${birthday}'),
        #{school}, #{degree}, #{tel}, #{address}, #{email}, #{job}, #{remark},
        #{description}, #{hiredate}, #{tag}, ${recommended}, ${status}
        )
    </update>
</mapper>
